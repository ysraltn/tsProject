definitions:
  handlers.AddUserRequest:
    properties:
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  handlers.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  handlers.RegisterRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.Cycle:
    properties:
      cycle:
        type: integer
      id:
        type: integer
      month:
        type: integer
      product_id:
        type: integer
      year:
        type: integer
    type: object
  models.Institution:
    properties:
      city:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  models.Product:
    properties:
      brand:
        type: string
      id:
        type: integer
      institution_id:
        type: integer
      model:
        type: string
      owner:
        type: string
      responsible:
        type: string
      serial:
        type: string
      status:
        type: string
    type: object
  models.ProductWithInstitution:
    properties:
      brand:
        type: string
      id:
        type: integer
      institution_id:
        type: integer
      institution_name:
        type: string
      model:
        type: string
      owner:
        type: string
      responsible:
        type: string
      serial:
        type: string
      status:
        type: string
    type: object
  models.UserResponse:
    properties:
      id:
        type: integer
      role:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample API with JWT authentication.
  title: Fiber API Documentation
  version: "1.0"
paths:
  /api/admin:
    get:
      consumes:
      - application/json
      description: This endpoint is restricted to admin users only. It validates the
        JWT token and checks if the user has an "admin" role.
      produces:
      - application/json
      responses:
        "200":
          description: Welcome Admin!
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Admin access
      tags:
      - admin
  /api/admin/user:
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: GetAllUsers
      tags:
      - admin
    post:
      consumes:
      - application/json
      description: Add user with given role
      parameters:
      - description: Add User Request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/handlers.AddUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Login Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: AddUser
      tags:
      - admin
  /api/cycle:
    post:
      consumes:
      - application/json
      description: Add Product Cycle
      parameters:
      - description: Cycle data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Cycle'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Cycle'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Add Cycle
      tags:
      - cycles
  /api/institution:
    post:
      consumes:
      - application/json
      description: Register an institution
      parameters:
      - description: Institution data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Institution'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Institution'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Add Institution
      tags:
      - institutions
  /api/institution/{id}:
    get:
      consumes:
      - application/json
      description: Get a single institution by its ID
      parameters:
      - description: Institution ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Institution'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get Institution by ID
      tags:
      - institutions
  /api/products:
    get:
      consumes:
      - application/json
      description: Get all products with institution names
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ProductWithInstitution'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get All Products with institution names
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Register a product
      parameters:
      - description: Product data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Add Product
      tags:
      - products
  /api/products/{id}:
    delete:
      description: Delete a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete Product
      tags:
      - products
    get:
      description: Get a product by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get Product by ID
      tags:
      - products
  /api/products/{product_id}/cycles/{year}:
    get:
      consumes:
      - application/json
      description: Get all cycles for a specific product in a given year
      parameters:
      - description: Product ID
        in: path
        name: product_id
        required: true
        type: integer
      - description: Year
        in: path
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Cycle'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get Cycles by Product ID and Year
      tags:
      - cycles
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return a JWT token
      parameters:
      - description: Login Request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Login Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Register Request
        in: body
        name: registerRequest
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: user registered successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: error registering user
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
